/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { ethers } from "ethers";
import {
  FactoryOptions,
  HardhatEthersHelpers as HardhatEthersHelpersBase,
} from "@nomiclabs/hardhat-ethers/types";

import * as Contracts from ".";

declare module "hardhat/types/runtime" {
  interface HardhatEthersHelpers extends HardhatEthersHelpersBase {
    getContractFactory(
      name: "EntryPoint",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.EntryPoint__factory>;
    getContractFactory(
      name: "EntryPoint",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.EntryPoint__factory>;
    getContractFactory(
      name: "NonceManager",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.NonceManager__factory>;
    getContractFactory(
      name: "SenderCreator",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SenderCreator__factory>;
    getContractFactory(
      name: "StakeManager",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.StakeManager__factory>;
    getContractFactory(
      name: "ERC1271",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1271__factory>;
    getContractFactory(
      name: "ERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC165__factory>;
    getContractFactory(
      name: "IERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC165__factory>;
    getContractFactory(
      name: "IAccountPermissions",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAccountPermissions__factory>;
    getContractFactory(
      name: "IContractMetadata",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IContractMetadata__factory>;
    getContractFactory(
      name: "IMulticall",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IMulticall__factory>;
    getContractFactory(
      name: "IPermissions",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPermissions__factory>;
    getContractFactory(
      name: "IPermissionsEnumerable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPermissionsEnumerable__factory>;
    getContractFactory(
      name: "Multicall",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Multicall__factory>;
    getContractFactory(
      name: "AccountPermissions",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AccountPermissions__factory>;
    getContractFactory(
      name: "AccountPermissionsStorage",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AccountPermissionsStorage__factory>;
    getContractFactory(
      name: "ContractMetadata",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ContractMetadata__factory>;
    getContractFactory(
      name: "ContractMetadataStorage",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ContractMetadataStorage__factory>;
    getContractFactory(
      name: "Initializable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Initializable__factory>;
    getContractFactory(
      name: "Permissions",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Permissions__factory>;
    getContractFactory(
      name: "PermissionsStorage",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PermissionsStorage__factory>;
    getContractFactory(
      name: "PermissionsEnumerable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PermissionsEnumerable__factory>;
    getContractFactory(
      name: "PermissionsEnumerableStorage",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PermissionsEnumerableStorage__factory>;
    getContractFactory(
      name: "IERC1155Receiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1155Receiver__factory>;
    getContractFactory(
      name: "ERC1155Holder",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1155Holder__factory>;
    getContractFactory(
      name: "ERC1155Receiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1155Receiver__factory>;
    getContractFactory(
      name: "IERC721Receiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Receiver__factory>;
    getContractFactory(
      name: "ERC721Holder",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721Holder__factory>;
    getContractFactory(
      name: "IAccount",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAccount__factory>;
    getContractFactory(
      name: "IAggregator",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAggregator__factory>;
    getContractFactory(
      name: "IEntryPoint",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IEntryPoint__factory>;
    getContractFactory(
      name: "INonceManager",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.INonceManager__factory>;
    getContractFactory(
      name: "IPaymaster",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPaymaster__factory>;
    getContractFactory(
      name: "IStakeManager",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IStakeManager__factory>;
    getContractFactory(
      name: "IAccount",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAccount__factory>;
    getContractFactory(
      name: "IAccountCore",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAccountCore__factory>;
    getContractFactory(
      name: "IAccountFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAccountFactory__factory>;
    getContractFactory(
      name: "IAccountFactoryCore",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAccountFactoryCore__factory>;
    getContractFactory(
      name: "IAggregator",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAggregator__factory>;
    getContractFactory(
      name: "IEntryPoint",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IEntryPoint__factory>;
    getContractFactory(
      name: "INonceManager",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.INonceManager__factory>;
    getContractFactory(
      name: "IStakeManager",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IStakeManager__factory>;
    getContractFactory(
      name: "Account",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Account__factory>;
    getContractFactory(
      name: "AccountFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AccountFactory__factory>;
    getContractFactory(
      name: "AccountCore",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AccountCore__factory>;
    getContractFactory(
      name: "AccountCoreStorage",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AccountCoreStorage__factory>;
    getContractFactory(
      name: "AccountExtension",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AccountExtension__factory>;
    getContractFactory(
      name: "BaseAccount",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BaseAccount__factory>;
    getContractFactory(
      name: "BaseAccountFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BaseAccountFactory__factory>;

    getContractAt(
      name: "EntryPoint",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.EntryPoint>;
    getContractAt(
      name: "EntryPoint",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.EntryPoint>;
    getContractAt(
      name: "NonceManager",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.NonceManager>;
    getContractAt(
      name: "SenderCreator",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SenderCreator>;
    getContractAt(
      name: "StakeManager",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.StakeManager>;
    getContractAt(
      name: "ERC1271",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1271>;
    getContractAt(
      name: "ERC165",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC165>;
    getContractAt(
      name: "IERC165",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC165>;
    getContractAt(
      name: "IAccountPermissions",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IAccountPermissions>;
    getContractAt(
      name: "IContractMetadata",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IContractMetadata>;
    getContractAt(
      name: "IMulticall",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IMulticall>;
    getContractAt(
      name: "IPermissions",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IPermissions>;
    getContractAt(
      name: "IPermissionsEnumerable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IPermissionsEnumerable>;
    getContractAt(
      name: "Multicall",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Multicall>;
    getContractAt(
      name: "AccountPermissions",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AccountPermissions>;
    getContractAt(
      name: "AccountPermissionsStorage",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AccountPermissionsStorage>;
    getContractAt(
      name: "ContractMetadata",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ContractMetadata>;
    getContractAt(
      name: "ContractMetadataStorage",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ContractMetadataStorage>;
    getContractAt(
      name: "Initializable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Initializable>;
    getContractAt(
      name: "Permissions",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Permissions>;
    getContractAt(
      name: "PermissionsStorage",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PermissionsStorage>;
    getContractAt(
      name: "PermissionsEnumerable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PermissionsEnumerable>;
    getContractAt(
      name: "PermissionsEnumerableStorage",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PermissionsEnumerableStorage>;
    getContractAt(
      name: "IERC1155Receiver",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1155Receiver>;
    getContractAt(
      name: "ERC1155Holder",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1155Holder>;
    getContractAt(
      name: "ERC1155Receiver",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1155Receiver>;
    getContractAt(
      name: "IERC721Receiver",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Receiver>;
    getContractAt(
      name: "ERC721Holder",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721Holder>;
    getContractAt(
      name: "IAccount",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IAccount>;
    getContractAt(
      name: "IAggregator",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IAggregator>;
    getContractAt(
      name: "IEntryPoint",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IEntryPoint>;
    getContractAt(
      name: "INonceManager",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.INonceManager>;
    getContractAt(
      name: "IPaymaster",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IPaymaster>;
    getContractAt(
      name: "IStakeManager",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IStakeManager>;
    getContractAt(
      name: "IAccount",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IAccount>;
    getContractAt(
      name: "IAccountCore",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IAccountCore>;
    getContractAt(
      name: "IAccountFactory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IAccountFactory>;
    getContractAt(
      name: "IAccountFactoryCore",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IAccountFactoryCore>;
    getContractAt(
      name: "IAggregator",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IAggregator>;
    getContractAt(
      name: "IEntryPoint",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IEntryPoint>;
    getContractAt(
      name: "INonceManager",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.INonceManager>;
    getContractAt(
      name: "IStakeManager",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IStakeManager>;
    getContractAt(
      name: "Account",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Account>;
    getContractAt(
      name: "AccountFactory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AccountFactory>;
    getContractAt(
      name: "AccountCore",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AccountCore>;
    getContractAt(
      name: "AccountCoreStorage",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AccountCoreStorage>;
    getContractAt(
      name: "AccountExtension",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AccountExtension>;
    getContractAt(
      name: "BaseAccount",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BaseAccount>;
    getContractAt(
      name: "BaseAccountFactory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BaseAccountFactory>;

    // default types
    getContractFactory(
      name: string,
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<ethers.ContractFactory>;
    getContractFactory(
      abi: any[],
      bytecode: ethers.utils.BytesLike,
      signer?: ethers.Signer
    ): Promise<ethers.ContractFactory>;
    getContractAt(
      nameOrAbi: string | any[],
      address: string,
      signer?: ethers.Signer
    ): Promise<ethers.Contract>;
  }
}
